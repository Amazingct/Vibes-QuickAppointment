{
  "info": {
    "name": "VCP Backend API",
    "description": "API collection for VCP Project backend authentication and user management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5002",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        },
        "description": "Basic health check endpoint"
      }
    },
    {
      "name": "API Info",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api",
          "host": ["{{base_url}}"],
          "path": ["api"]
        },
        "description": "Get API information and available endpoints"
      }
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Sign Up",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('refresh_token', response.data.refresh_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"username\": \"johndoe\",\n  \"password\": \"password123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Register a new user account. Automatically saves tokens to collection variables on success."
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('refresh_token', response.data.refresh_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with email or username. Use 'login' field for either email or username. Automatically saves tokens to collection variables on success."
          }
        },
        {
          "name": "Login with Username",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "        pm.collectionVariables.set('refresh_token', response.data.refresh_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"johndoe\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login example using username instead of email"
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.access_token) {",
                  "        pm.collectionVariables.set('access_token', response.data.access_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{refresh_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            },
            "description": "Refresh access token using refresh token. Automatically updates access token in collection variables."
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get current authenticated user information"
          }
        },
        {
          "name": "Validate Token",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/validate",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "validate"]
            },
            "description": "Validate if current JWT token is valid and active"
          }
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": { "raw": "{{base_url}}/api/auth/verify-otp", "host": ["{{base_url}}"], "path": ["api","auth","verify-otp"] },
            "description": "Verify email with OTP"
          }
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": { "mode": "raw", "raw": "{\n  \"email\": \"john.doe@example.com\"\n}" },
            "url": { "raw": "{{base_url}}/api/auth/resend-otp", "host": ["{{base_url}}"], "path": ["api","auth","resend-otp"] },
            "description": "Resend verification OTP"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "auth": { "type": "inherit" },
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": { "mode": "raw", "raw": "{\n  \"old_password\": \"password123\",\n  \"new_password\": \"password456\"\n}" },
            "url": { "raw": "{{base_url}}/api/auth/change-password", "host": ["{{base_url}}"], "path": ["api","auth","change-password"] },
            "description": "Change current user's password"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Get current user's profile information"
          }
        },
        {
          "name": "List Users With Services",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/with-services?page=1&per_page=10&search=",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "with-services"],
              "query": [
                { "key": "page", "value": "1", "description": "Page number" },
                { "key": "per_page", "value": "10", "description": "Items per page (max 100)" },
                { "key": "search", "value": "", "description": "Search by username, name, or email" }
              ]
            },
            "description": "List users who have at least one service"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"avatar_url\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Update current user's profile. All fields are optional."
          }
        },
        {
          "name": "List Users",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users?page=1&per_page=10&search=",
              "host": ["{{base_url}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "per_page",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search by username, first name, last name, or email"
                }
              ]
            },
            "description": "List all active users with pagination and search"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "auth": {
              "type": "inherit"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/1",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "1"]
            },
            "description": "Get specific user by ID"
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "List Service Categories",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "categories"]
            },
            "description": "Get unique list of service categories"
          }
        },
        {
          "name": "List Services",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services?page=1&per_page=12&search=&category=&username=&is_active=true&sort=created_at:desc",
              "host": ["{{base_url}}"],
              "path": ["api", "services"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "per_page", "value": "12"},
                {"key": "search", "value": ""},
                {"key": "category", "value": ""},
                {"key": "username", "value": ""},
                {"key": "is_active", "value": "true"},
                {"key": "sort", "value": "created_at:desc"}
              ]
            },
            "description": "List services with filters, search, sort, and pagination"
          }
        },
        {
          "name": "Create Service",
          "request": {
            "auth": { "type": "inherit" },
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Website Design\",\n  \"duration_minutes\": 60,\n  \"price\": 150.00,\n  \"description\": \"Full website design consultation and prototype.\",\n  \"is_active\": true,\n  \"images\": [\"https://picsum.photos/seed/1/400/300\", \"https://picsum.photos/seed/2/400/300\"],\n  \"category\": \"UI/UX Design\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/services",
              "host": ["{{base_url}}"],
              "path": ["api", "services"]
            },
            "description": "Create a new service for the current user"
          }
        },
        {
          "name": "Get Service by ID",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/1",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "1"]
            },
            "description": "Get a specific service by ID"
          }
        },
        {
          "name": "Update Service",
          "request": {
            "auth": { "type": "inherit" },
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Website Design - Premium\",\n  \"price\": 200.00,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/services/1",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "1"]
            },
            "description": "Update a specific service (owner only)"
          }
        },
        {
          "name": "Delete Service",
          "request": {
            "auth": { "type": "inherit" },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/services/1",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "1"]
            },
            "description": "Delete a specific service (owner only)"
          }
        },
        {
          "name": "Upload Service Image (single)",
          "request": {
            "auth": { "type": "inherit" },
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "multipart/form-data" }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "file", "type": "file", "src": [] }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/services/upload-image",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "upload-image"]
            },
            "description": "Upload a single image and receive its public URL"
          }
        },
        {
          "name": "Upload Service Images (multiple)",
          "request": {
            "auth": { "type": "inherit" },
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "multipart/form-data" }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "files", "type": "file", "src": [], "disabled": false }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/services/upload-image",
              "host": ["{{base_url}}"],
              "path": ["api", "services", "upload-image"]
            },
            "description": "Upload multiple images and receive public URLs"
          }
        }
      ]
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "List Bookings (as provider)",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/bookings?role=provider&page=1&per_page=10&status=",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings"],
              "query": [
                {"key": "role", "value": "provider"},
                {"key": "page", "value": "1"},
                {"key": "per_page", "value": "10"},
                {"key": "status", "value": ""}
              ]
            },
            "description": "List bookings where current user is the provider"
          }
        },
        {
          "name": "List Bookings (as client)",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/bookings?role=client&page=1&per_page=10&status=",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings"],
              "query": [
                {"key": "role", "value": "client"},
                {"key": "page", "value": "1"},
                {"key": "per_page", "value": "10"},
                {"key": "status", "value": ""}
              ]
            },
            "description": "List bookings where current user is the client"
          }
        },
        {
          "name": "Create Booking",
          "request": {
            "auth": { "type": "inherit" },
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"service_id\": 1,\n  \"time_booked\": \"2025-09-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/bookings",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings"]
            },
            "description": "Create a booking as current user (client). Provider is derived from the service."
          }
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/bookings/1",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings", "1"]
            },
            "description": "Retrieve a single booking"
          }
        },
        {
          "name": "Update Booking (status/time)",
          "request": {
            "auth": { "type": "inherit" },
            "method": "PUT",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"accepted\",\n  \"time_booked\": \"2025-09-15T11:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/bookings/1",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings", "1"]
            },
            "description": "Update booking status or time. Provider or client involved can update."
          }
        },
        {
          "name": "Delete Booking",
          "request": {
            "auth": { "type": "inherit" },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/bookings/1",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings", "1"]
            },
            "description": "Delete a booking (provider or client)"
          }
        },
        {
          "name": "Get Booked Slots",
          "request": {
            "auth": { "type": "inherit" },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/bookings/slots?provider_id=1&service_id=&start=&end=",
              "host": ["{{base_url}}"],
              "path": ["api", "bookings", "slots"],
              "query": [
                {"key": "provider_id", "value": "1", "description": "Filter by provider"},
                {"key": "service_id", "value": "", "description": "Filter by service"},
                {"key": "start", "value": "", "description": "ISO start datetime"},
                {"key": "end", "value": "", "description": "ISO end datetime"}
              ]
            },
            "description": "Return pending and accepted booking slots for conflict checking"
          }
        }
      ]
    }
  ]
}
